{
  "name": "Ballerina",
  "scopeName": "source.ballerina",
  "patterns": [
    {
      "include": "#functionDec"
    },
    {
      "include": "#serviceDec"
    },
    {
      "include": "#endpointDef"
    },
    {
      "include": "#documentationDef"
    },
    {
      "include": "#typeDef"
    },
    {
      "include": "#objectDec"
    },
    {
      "include": "#record"
    },
    {
      "include": "#annotationDec"
    },
    {
      "include": "#recordLiteral"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#code"
    }
  ],
  "repository": {
    "annotationDec": {
      "patterns": [
        {
          "name": "storage.type.annotation.ballerina",
          "match": "@((?:(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")):)?(?:(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.ballerina",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "butClause": {
      "patterns": [
        {
          "begin": "=\u003e",
          "end": ",|(?=\\})",
          "patterns": [
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.operator.ballerina"
            }
          }
        }
      ]
    },
    "butExp": {
      "patterns": [
        {
          "begin": "\\bbut\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#butExpBody"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina.documentation"
            }
          }
        }
      ]
    },
    "butExpBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#parameter"
            },
            {
              "include": "#butClause"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina.documentation"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina.documentation"
            }
          }
        }
      ]
    },
    "call": {
      "patterns": [
        {
          "name": "entity.name.function.ballerina",
          "match": "((?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\s*(?=\\()"
        }
      ]
    },
    "callableUnitBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#endpointDef"
            },
            {
              "include": "#workerDef"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "code": {
      "patterns": [
        {
          "include": "#booleans"
        },
        {
          "include": "#matchStatement"
        },
        {
          "include": "#butExp"
        },
        {
          "include": "#xml"
        },
        {
          "include": "#stringTemplate"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#maps"
        },
        {
          "include": "#paranthesised"
        },
        {
          "include": "#paranthesisedBracket"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#comment"
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.ballerina",
          "match": "\\/\\/.*"
        }
      ]
    },
    "constrainType": {
      "patterns": [
        {
          "begin": "\u003c",
          "end": "\u003e",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#continuedType"
            },
            {},
            {
              "name": "storage.type.ballerina",
              "match": "\\b((?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\b"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.begin.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.ballerina"
            }
          }
        }
      ]
    },
    "continuedTupleType": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "(?=\\)|;)",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#continuedType"
            },
            {},
            {
              "name": "storage.type.ballerina",
              "match": "\\b((?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\b"
            }
          ]
        }
      ]
    },
    "continuedType": {
      "patterns": [
        {
          "begin": "[|,:]",
          "end": "(\\b(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")\\b)|(\\))",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#continuedTupleType"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.operator.ballerina"
            }
          },
          "endCaptures": {
            "1": {
              "name": "storage.type.ballerina"
            },
            "2": {
              "name": "source.ballerina"
            }
          }
        }
      ]
    },
    "defaultValue": {
      "patterns": [
        {
          "begin": "[=:]",
          "end": "(?=[,)])",
          "patterns": [
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.operator.ballerina"
            }
          }
        }
      ]
    },
    "documentationBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "match": "(P|R|T|F|V)({{)(.*)(}})",
              "captures": {
                "1": {
                  "name": "keyword.other.ballerina.documentation"
                },
                "2": {
                  "name": "keyword.other.ballerina.documentation"
                },
                "3": {
                  "name": "variable.parameter.ballerina.documentation"
                },
                "4": {
                  "name": "keyword.other.ballerina.documentation"
                }
              }
            },
            {
              "name": "comment.block.code.ballerina.documentation",
              "begin": "\\```",
              "end": "\\```"
            },
            {
              "name": "comment.block.code.ballerina.documentation",
              "begin": "\\``",
              "end": "\\``"
            },
            {
              "name": "comment.block.code.ballerina.documentation",
              "begin": "\\`",
              "end": "\\`"
            },
            {
              "name": "comment.block.ballerina.documentation",
              "match": "."
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina.documentation"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina.documentation"
            }
          }
        }
      ]
    },
    "documentationDef": {
      "patterns": [
        {
          "begin": "\\b(?:documentation|deprecated)\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#documentationBody"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "delimiter.curly"
            }
          }
        }
      ]
    },
    "endpointDef": {
      "patterns": [
        {
          "begin": "\\bendpoint\\b",
          "end": ";",
          "patterns": [
            {
              "include": "#parameter"
            },
            {
              "include": "#recordLiteral"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          }
        }
      ]
    },
    "functionDec": {
      "patterns": [
        {
          "begin": "\\bfunction\\b",
          "end": "\\}|(?=;)",
          "patterns": [
            {
              "include": "#functionReceiver"
            },
            {
              "include": "#functionParameters"
            },
            {
              "include": "#functionReturns"
            },
            {
              "include": "#functionName"
            },
            {
              "include": "#callableUnitBody"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "functionName": {
      "patterns": [
        {
          "name": "entity.name.function.ballerina",
          "match": "(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")"
        }
      ]
    },
    "functionParameters": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "include": "#parameter"
            },
            {
              "include": "#defaultValue"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "delimiter.parenthesis"
            }
          },
          "endCaptures": {
            "0": {
              "name": "delimiter.parenthesis"
            }
          }
        }
      ]
    },
    "functionReceiver": {
      "patterns": [
        {
          "begin": "\u003c",
          "end": "\u003e",
          "patterns": [
            {
              "include": "#parameter"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.begin.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.ballerina"
            }
          }
        }
      ]
    },
    "functionReturns": {
      "patterns": [
        {
          "begin": "\\breturns\\b",
          "end": "(?=\\{|;)",
          "patterns": [
            {
              "name": "storage.type.ballerina",
              "match": "(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "curly"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.ballerina",
          "match": "\\b(if|else|iterator|try|catch|finally|fork|join|all|some|while|foreach|in|throw|return|returns|break|timeout|transaction|abort|retry|retries|continue|bind|with|lengthof|typeof|enum)\\b"
        },
        {
          "name": "keyword.other.ballerina",
          "match": "\\b(import|version|public|private|attach|as|native|documentation|lock|new|record|limit|ascending|descending|check|start|done|untaint|onretry|oncommit|onabort|scope|compensate|compensation|primarykey)\\b"
        },
        {
          "name": "keyword.other.siddhi.ballerina",
          "match": "\\b(forever|from|on|select|group|by|having|order|where|followed|insert|into|update|delete|set|for|window|query)\\b"
        },
        {
          "name": "keyword.other.ballerina",
          "match": "\\b(annotation|package|type|connector|function|resource|service|action|worker|struct|transformer|endpoint|object)\\b"
        },
        {
          "name": "keyword.other.ballerina",
          "match": "\\b(const|true|false|reply|create|parameter)\\b"
        },
        {
          "name": "keyword.operator.ballerina",
          "match": "(!|%|\\+|\\-|~=|==|=|!=|\u003c|\u003e|\u0026\u0026|\\|\\||\\?:)"
        },
        {
          "include": "#types"
        }
      ]
    },
    "maps": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.ballerina"
            }
          }
        }
      ]
    },
    "matchStatement": {
      "patterns": [
        {
          "begin": "\\bmatch\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#matchStatementBody"
            },
            {
              "include": "#comment"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          }
        }
      ]
    },
    "matchStatementBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#parameter"
            },
            {
              "include": "#matchStatementPatternClause"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina.documentation"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina.documentation"
            }
          }
        }
      ]
    },
    "matchStatementPatternClause": {
      "patterns": [
        {
          "begin": "=\u003e",
          "end": "((\\})|;|,)",
          "patterns": [
            {
              "include": "#callableUnitBody"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          }
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.ballerina",
          "match": "\\b0[xX][\\da-f]+\\b|\\b\\d+\\.?\\d*"
        }
      ]
    },
    "objectBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#varDefBlock"
            },
            {
              "include": "#documentationDef"
            },
            {
              "include": "#objectInitDec"
            },
            {
              "include": "#functionDec"
            },
            {
              "include": "#annotationDec"
            },
            {
              "include": "#variableDef"
            },
            {
              "include": "#comment"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "objectDec": {
      "patterns": [
        {
          "begin": "\\bobject\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#objectBody"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "delimiter.curly"
            }
          }
        }
      ]
    },
    "objectInitBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "objectInitDec": {
      "patterns": [
        {
          "begin": "\\bnew\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#objectInitParameters"
            },
            {
              "include": "#objectInitBody"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          }
        }
      ]
    },
    "objectInitParameters": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "include": "#code"
            },
            {
              "name": "variable.parameter.ballerina",
              "match": "\\b((?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\b"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.begin.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.ballerina"
            }
          }
        }
      ]
    },
    "objectMemberFunctionDec": {
      "patterns": [
        {
          "begin": "\\bfunction\\b",
          "end": "(?=(?:\\}|;))",
          "patterns": [
            {
              "include": "#functionReceiver"
            },
            {
              "include": "#functionParameters"
            },
            {
              "include": "#functionReturns"
            },
            {
              "include": "#functionName"
            },
            {
              "include": "#callableUnitBody"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "parameter": {
      "patterns": [
        {
          "begin": "\\b(?:(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\b",
          "end": "\\b(?:(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\b|(?==\u003e)|(?=\\))",
          "patterns": [
            {
              "include": "#continuedType"
            },
            {
              "include": "#constrainType"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "storage.type.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "variable.parameter.ballerina"
            }
          }
        }
      ]
    },
    "paranthesised": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#code"
            }
          ]
        }
      ]
    },
    "paranthesisedBracket": {
      "patterns": [
        {
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#code"
            }
          ]
        }
      ]
    },
    "record": {
      "patterns": [
        {
          "begin": "\\brecord\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#recordBody"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "delimiter.curly"
            }
          }
        }
      ]
    },
    "recordBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#annotationDec"
            },
            {
              "include": "#variableDef"
            },
            {
              "include": "#comment"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "recordLiteral": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "resourceDef": {
      "patterns": [
        {
          "begin": "((?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\s*(?=\\()",
          "end": "\\}",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#functionParameters"
            },
            {
              "include": "#callableUnitBody"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "entity.name.function.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "serviceBindRecordLiteral": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "serviceBindVarContinued": {
      "patterns": [
        {
          "begin": ",",
          "end": "(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")",
          "endCaptures": {
            "0": {
              "name": "variable.parameter.ballerina"
            }
          }
        }
      ]
    },
    "serviceBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#documentationDef"
            },
            {
              "include": "#annotationDec"
            },
            {
              "include": "#endpointDef"
            },
            {
              "include": "#resourceDef"
            },
            {
              "include": "#recordLiteral"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "serviceDec": {
      "patterns": [
        {
          "begin": "\\bservice\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#serviceReceiver"
            },
            {
              "include": "#serviceEndpointAttachments"
            },
            {
              "include": "#serviceName"
            },
            {
              "include": "#comment"
            },
            {
              "include": "#serviceBody"
            },
            {
              "include": "#serviceBindVarContinued"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.block.ballerina"
            }
          }
        }
      ]
    },
    "serviceEndpointAttachments": {
      "patterns": [
        {
          "begin": "bind",
          "end": "(\\})|((?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))",
          "patterns": [
            {
              "include": "#serviceBindRecordLiteral"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.block.ballerina"
            },
            "2": {
              "name": "variable.parameter.ballerina"
            }
          }
        }
      ]
    },
    "serviceName": {
      "patterns": [
        {
          "name": "entity.name.function.ballerina",
          "match": "(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")"
        }
      ]
    },
    "serviceReceiver": {
      "patterns": [
        {
          "begin": "\u003c",
          "end": "\u003e",
          "patterns": [
            {
              "name": "storage.type.ballerina",
              "match": "(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.begin.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.ballerina"
            }
          }
        }
      ]
    },
    "stringTemplate": {
      "patterns": [
        {
          "begin": "(\\bstring)(\\s*)(`)",
          "end": "`",
          "patterns": [
            {
              "include": "#templateVariable"
            },
            {
              "name": "string",
              "match": "."
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "keyword.ballerina"
            },
            "2": {},
            "3": {
              "name": "string.template.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "string.template.ballerina"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "\\\"",
          "end": "\\\"",
          "patterns": [
            {
              "name": "constant.character.escape.ballerina",
              "match": "\\\\."
            },
            {
              "name": "string",
              "match": "."
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "string.begin.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "string.end.ballerina"
            }
          }
        }
      ]
    },
    "templateVariable": {
      "patterns": [
        {
          "begin": "{{",
          "end": "}}",
          "patterns": [
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "constant.character.escape.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "constant.character.escape.ballerina"
            }
          }
        }
      ]
    },
    "typeDef": {
      "patterns": [
        {
          "begin": "\\btype\\b",
          "end": "\\b(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\")\\b",
          "patterns": [
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "source.ballerina"
            }
          }
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.ballerina",
          "match": "\\b(boolean|int|float|string|var|any|datatable|table|byte|future|typedesc)\\b"
        },
        {
          "name": "storage.type.ballerina",
          "match": "\\b(map|exception|json|xml|xmlns|error)\\b"
        },
        {
          "name": "storage.type.ballerina",
          "match": "\\b(stream|streamlet|aggregation)\\b"
        }
      ]
    },
    "varDefBlock": {
      "patterns": [
        {
          "begin": "\\b(?:private|public)\\b",
          "end": "\\}|;|,",
          "patterns": [
            {
              "include": "#objectMemberFunctionDec"
            },
            {
              "include": "#variableDef"
            },
            {
              "include": "#code"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          }
        }
      ]
    },
    "variableDef": {
      "patterns": [
        {
          "begin": "\\b(?:(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\b|(?=\\()",
          "end": "\\b(?:(?:[a-zA-Z_][a-zA-Z0-9_]*)|(?:\\^\"([^|\"\\\\\\f\\n\\r\\t]|\\\\\\\\[btnfr]|\\\\[|\"\\\\/])+\"))\\b|(?=\\,)|(?=;)|\\.\\.\\.",
          "patterns": [
            {
              "include": "#continuedTupleType"
            },
            {
              "include": "#continuedType"
            },
            {
              "include": "#constrainType"
            },
            {
              "include": "#comment"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "storage.type.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "source.ballerina"
            }
          }
        }
      ]
    },
    "workerBody": {
      "patterns": [
        {
          "begin": "\\{",
          "end": "(?=\\})",
          "patterns": [
            {
              "include": "#code"
            }
          ]
        }
      ]
    },
    "workerDef": {
      "patterns": [
        {
          "begin": "\\bworker\\b",
          "end": "\\}",
          "patterns": [
            {
              "include": "#workerBody"
            }
          ],
          "beginCaptures": {
            "0": {
              "name": "keyword.ballerina"
            }
          }
        }
      ]
    },
    "xml": {
      "patterns": [
        {
          "begin": "(\\bxml)(\\s*)(`)",
          "end": "`",
          "patterns": [
            {
              "include": "#templateVariable"
            },
            {
              "name": "string",
              "match": "."
            }
          ],
          "beginCaptures": {
            "1": {
              "name": "keyword.ballerina"
            },
            "2": {},
            "3": {
              "name": "string.template.ballerina"
            }
          },
          "endCaptures": {
            "0": {
              "name": "string.template.ballerina"
            }
          }
        }
      ]
    }
  }
}
